import pyfirmata
import time
import cv2
import email, smtplib, ssl
from email import encoders
from email.mime.base import MIMEBase
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

board = pyfirmata.Arduino('COM3')
it = pyfirmata.util.Iterator(board)
it.start()
sw = board.get_pin('a:0:i')
sw1 = board.get_pin('a:1:i')
sw2 = board.get_pin('d:7:o')
sw3 = board.get_pin('d:8:o')
while True:
    time.sleep(1.0)
    ans = sw.read()
    tempCelsius = (((ans / 1024) * 5000) / 10) * 1000
    ans1 = sw1.read()
    light_intensity = ans1 * 1000
    if tempCelsius > 25 and light_intensity > 350\
            :
        sw2.write(1)
        port = 465  # For SSL
        video = cv2.VideoCapture(0)
        # 2. Variable
        a = 0
        # 3. While loop
        j = 1
        while j:
            a = a + 1
            # 4.Create a frame object
            check, frame = video.read()
            # Converting to grayscale
            # gray = cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)
            # 5.show the frame!
            cv2.imshow("Capturing", frame)
            # 6.for playing
            key = cv2.waitKey(1)
            j = j - 1
        # 7. image saving
        showPic = cv2.imwrite("filename.jpg", frame)
        print(showPic)
        # 8. shutdown the camera
        video.release()
        cv2.destroyAllWindows

        subject = "Security System"
        body = f"your room light is turned onn to {light_intensity} and temprature changed to {tempCelsius} "
        sender_email = "mishragaurav656@gmail.com"
        receiver_email = "mishragaurav656@gmail.com"
        password = r'gaurav@656'

        # Create a multipart message and set headers
        message = MIMEMultipart()
        message["From"] = sender_email
        message["To"] = receiver_email
        message["Subject"] = subject
        message["Bcc"] = receiver_email  # Recommended for mass emails

        # Add body to email
        message.attach(MIMEText(body, "plain"))

        filename = "filename.jpg"  # In same directory as script

        # Open PDF file in binary mode
        with open(filename, "rb") as attachment:
            # Add file as application/octet-stream
            # Email client can usually download this automatically as attachment
            part = MIMEBase("application", "octet-stream")
            part.set_payload(attachment.read())

        # Encode file in ASCII characters to send by email
        encoders.encode_base64(part)

        # Add header as key/value pair to attachment part
        part.add_header(
            "Content-Disposition",
            f"attachment; filename= {filename}",
        )

        # Add attachment to message and convert message to string
        message.attach(part)
        text = message.as_string()

        # Log in to server using secure context and send email
        context = ssl.create_default_context()
        with smtplib.SMTP_SSL("smtp.gmail.com", 465, context=context) as server:
            server.login(sender_email, password)
            server.sendmail(sender_email, receiver_email, text)
        time.sleep(10.0)
        sw2.write(0)
    sw3.write(1)

